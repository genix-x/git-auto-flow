name: 🧪 Test Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-nuitka-build:
    name: Test Nuitka build on ${{ matrix.os }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: linux
            runner: ubuntu-latest
            binary_name: gitautoflow-test-linux
          - os: macos
            runner: macos-latest
            binary_name: gitautoflow-test-macos

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 🔧 Install patchelf (Linux)
        if: matrix.os == 'linux'
        run: sudo apt-get update && sudo apt-get install -y patchelf

      - name: 📦 Install UV
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: 🔧 Install dependencies
        run: |
          uv sync
          uv add nuitka
          uv add ordered-set

      - name: 📝 Create launcher file
        run: |
          cat > launcher.py << 'EOF'
          #!/usr/bin/env python3
          import sys
          import os
          sys.path.insert(0, os.path.join(os.path.dirname(__file__), "src"))
          from gitautoflow.cli.main import main
          if __name__ == "__main__":
              main()
          EOF

      - name: 🏗️ Test build with Nuitka
        run: |
          uv run python -m nuitka \
            --assume-yes-for-downloads \
            --jobs=4 \
            --include-package-data=gitautoflow \
            --include-package=lib \
            --output-dir=dist/ \
            launcher.py

      - name: 🏷️ Rename binary to test name
        run: |
          mv dist/launcher.bin dist/${{ matrix.binary_name }}

      - name: ✅ Test binary
        run: |
          chmod +x dist/${{ matrix.binary_name }}
          ./dist/${{ matrix.binary_name }} --help
          ./dist/${{ matrix.binary_name }} version

      - name: 📊 Show binary info
        run: |
          ls -la dist/
          file dist/${{ matrix.binary_name }} || true

      - name: 📤 Upload test binary (for debugging)
        uses: actions/upload-artifact@v4
        with:
          name: test-binary-${{ matrix.os }}
          path: dist/${{ matrix.binary_name }}
          retention-days: 1